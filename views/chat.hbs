<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

{{>menu}}

<h1 id="myId" data-user="{{userId}}">chat</h1>

<table class="table table-success table-hover table-bordered">
    <thead>
        <tr>
            <th>Chats</th>
        </tr>
    </thead>
    <tbody>
        {{#each chats}}
        <tr class="divs" data-fid="{{id}}">
            <td>{{name}} {{surname}}</td>
        </tr>
        {{/each}}
    </tbody>

    <div id="show"></div>
    <div>
        <input type="text" id="inp1">
        <button id="btn">send</button>
    </div>
</table>

<script src="/socket.io/socket.io.js"></script>

<script>
    const socket = io();
    const myId = document.getElementById('myId');
    const userId = myId.dataset.user;

    // Join room
    socket.emit('join', userId);
    console.log("Joined room with userId:", userId);

    const friends = document.querySelectorAll('.divs');
    const inp1 = document.getElementById('inp1');
    const show = document.getElementById('show');
    const btn = document.getElementById('btn');

    friends.forEach(function (friend) {
        friend.addEventListener('click', () => {
            const friendId = friend.dataset.fid;
            console.log("Selected friendId:", friendId);

            socket.emit('showMess', { userId: userId, fId: friendId });

            socket.on('getMess', (data) => {
                console.log("Messages received:", data);
                show.innerHTML = "";

                data.forEach((msg) => {
                    let p = document.createElement("p");
                    p.style.textAlign = msg.from == userId ? "right" : "left";
                    p.innerHTML = msg.message;
                    show.appendChild(p);
                });
            });

            btn.onclick = () => {
                if (inp1.value.trim()) {
                    console.log("Sending message:", inp1.value);
                    socket.emit('newMess', { message: inp1.value, userId: userId, friendId: friendId });
                    socket.emit('showMess', { userId: userId, fId: friendId });
                    inp1.value = "";
                } else {
                    console.warn("Message input is empty.");
                }
            };
        });
    });
</script>